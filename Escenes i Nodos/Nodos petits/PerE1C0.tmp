[gd_scene load_steps=4 format=3 uid="uid://b0y0xe1kq83rq"]

[ext_resource type="PackedScene" uid="uid://iihgd25mcbik" path="res://Models/Carles.blend" id="1_6vgcb"]

[sub_resource type="GDScript" id="GDScript_kx8x1"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5

@export var camera: Node3D
# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)
		
	#rotation.x = look_at(cursor.global_position)

	move_and_slide()
"

[sub_resource type="BoxShape3D" id="BoxShape3D_wfcx3"]
size = Vector3(2.32227, 7.4567, 1.68372)

[node name="CharacterBody3D" type="CharacterBody3D"]
script = SubResource("GDScript_kx8x1")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0400391, 2.5741, 0.341858)
shape = SubResource("BoxShape3D_wfcx3")

[node name="Carles" parent="." instance=ExtResource("1_6vgcb")]
